# application name
spring.application.name = update-booked-status-service-application

# broker server node
spring.cloud.stream.kafka.binder.brokers = 54.146.205.212:9092

# kafka binder name - method name of your function
spring.cloud.function.definition = consumeMovieTickedBookingMessage

# kafka consumer group name
spring.cloud.stream.bindings.consumeMovieTickedBookingMessage.group = ${spring.application.name}

# kafka topic name
spring.cloud.stream.bindings.consumeMovieTickedBookingMessage-in-0.destination = movie-ticket-booked-topic


# deserialization configuration
spring.cloud.stream.kafka.bindings.consumeMovieTickedBookingMessage.in-0.consumer.configuration.key.deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.bindings.consumeMovieTickedBookingMessage.in-0.consumer.configuration.value.deserializer = org.springframework.kafka.support.serializer.JsonDeserializer


# adding the trusted package to deserialize the JSON data else it will throw to add the trusted package exception
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.trusted.packages = '*'
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.use.type.headers = false